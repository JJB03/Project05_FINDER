<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finder.project.resume.mapper.ResumeMapper">

<resultMap id="CvResultMap" type="com.finder.project.resume.dto.Resume">
    <id property="cvNo" column="cv_no"/>
    <result property="coverLetter" column="cover_letter"/>
    <result property="cvTitle" column="cv_title"/>
    <result property="cvRegDate" column="cv_reg_date"/>
    <result property="cvUpdDate" column="cv_upd_date"/>
    
    <!-- education mapping -->
    <collection property="educationList" ofType="com.finder.project.resume.dto.Education">
        <id property="educationNo" column="education_no"/>
        <result property="university" column="university"/>
        <result property="major" column="major"/>
        <result property="universityStatus" column="university_status"/>
        <result property="cvNo" column="cv_no"/>
    </collection>

    <!-- employment_history mapping -->
    <collection property="employmentHistoryList" ofType="com.finder.project.resume.dto.EmploymentHistory">
        <id property="employmentHistoryNo" column="employment_history_no"/>
        <result property="organization" column="organization"/>
        <result property="duration" column="duration"/>
        <result property="duties" column="duties"/>
        <result property="cvNo" column="cv_no"/>
    </collection>
</resultMap>

  <!-- 이력서 리스트 조회 -->
  <select id="resumelist" resultMap="CvResultMap">
  SELECT u.*, c.*, eh.*, ed.* 
  FROM cv c
  INNER JOIN employment_history eh ON c.cv_no = eh.cv_no
  INNER JOIN `user` u ON c.cv_no = u.user_no
  INNER JOIN education ed ON c.cv_no = ed.cv_no
  </select>

  <!-- 이력서 작성 -->
  <!-- 유저 테이블 & 이력서 테이블 & 경력 테이블 & 학력 테이블 -->
  <insert id="create" >
      INSERT INTO `cv` (`cover_letter`, `cv_title`, `cv_reg_date`)
      VALUES (#{coverLetter}, #{cvTitle}, NOW())
      <!--       INSERT INTO `cv` (`cover_letter`, `cv_title`, `cv_reg_date`,
                        `user_name`, `user_gender`, `user_birth`, `user_email`,
                        `university`, `major`, `university_status`,
                        `organization`, `duration`, `duties`)
      VALUES (#{coverLetter}, #{cvTitle}, NOW(),
              #{userName}, #{userGender}, #{userBirth}, #{userEmail}, 
              #{university},#{major}, #{universityStatus},
              #{organization}, now(), `duties`) -->
  </insert>

  <!-- 이력서 상세 조회 -->
  <select id="select" resultMap="CvResultMap">
    SELECT u.*, c.*, eh.*, ed.* 
      FROM cv c
      INNER JOIN `user` u ON c.cv_no = u.user_no
      INNER JOIN employment_history eh ON c.cv_no = eh.cv_no
      INNER JOIN education ed ON c.cv_no = ed.cv_no
    WHERE c.cv_no = #{cvNo}
  </select>



  <!--이력서 수정-->
  <update id="update">
    UPDATE `cv`
    SET cv_title = #{cvTitle},
        cover_letter = #{coverLetter},
        cv_upd_date = now 
    WHERE cv_no = #{cvNo}
  </update>

  <!-- 이력서 삭제 -->
  <delete id="delete">
    DELETE FROM cv
    WHERE cv_no = #{cv_no}
  </delete>

  <!-- cv 최댓값 -->
  <select id="maxPk" resultType="int">
    SELECT MAX(cv_no)
    FROM cv
  </select>

</mapper>